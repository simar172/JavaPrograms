package datastr;

import java.util.LinkedList;

//import dsaques.RemoveNthNodeFromEndofList.ListNode;

public class Floydalgoofdetectingloops {
	public class ListNode {
	      int val;
	      ListNode next;
	      ListNode() {
	    	  
	      }
	      ListNode(int val){
	       this.val = val;
	      }
	      ListNode(int val, ListNode next) { 
	    	  this.val = val; 
	    	  this.next = next; 
	    	  }
	  }

	public boolean hasCycle(ListNode head) {
		ListNode slow = head;
		ListNode fast = head;
		while(fast != null && fast.next != null) {
		slow = slow.next;
		fast = fast.next.next;
		if(fast == slow) {
		return true;
		}
		}
		return false;
}
	public static void main(String[] args) {
		Floydalgoofdetectingloops a1=new Floydalgoofdetectingloops(); 
		 ListNode<Integer> l1 = new ListNode<Integer>();
		 l.addAll(1);
		l.add(2);
		l.add(3);
		l.add(4);
		l.add(5);
		System.out.println(a1.hasCycle(l));
	}
}
